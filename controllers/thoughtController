const { Thought, User } = require("../models");

const thoughtController = {
  // get all thoughts
  getAllThoughts(req, res) {
    Thought.find()
      .then((thought) => res.json(thought))
      .catch((err) => res.status(500).json(err));
  },
  //   ---------------------------------
  createThought(req, res) {
    Thought.create(req.body)
      .then((thought) => {
        return User.findOneAndUpdate(
          { _id: req.body.userID },
          { $push: { thoughts: thought._id } },
          { new: true }
        );
      })
      .then((user) => res.json(user))
      .catch((err) => res.status(500).json(err));
  },
  // -------------------------------------------

  updateThought({ params, body }, res) {
    Thought.findByIdAndUpdate({ _id: params.thoughtId }, body, {
      runValidators: true,
      new: true,
    })
      .then((thought) => {
        if (!thought) {
          res.status(404).json({ message: "No thought found" });
          return;
        }
        res.json(dbThought);
      })
      .catch((err) => res.json(err));
  },
  //   ------------------------------------------
  getThoughtById({ params }, res) {
    Thought.findOne({ _id: params.id })
      .then((thought) => {
        // if no thought is found
        if (!thought) {
          res.status(404).json({ message: "No thought found" });
          return;
        }
        res.json(thought);
      })
      .catch((err) => {
        console.log(err);
        res.status(400).json(err);
      });
  },
  // -------------------------------------------
  deleteThought({ params }, res) {
    Thought.findOneAndDelete({
      _id: params.thoughtId,
    })
      .then((deletedThought) => {
        if (!deletedThought) {
          return res.status(404).json({
            message: "No thought with this id!",
          });
        }
        return User.findOneAndUpdate(
          {
            thoughts: params.thoughtId,
          },
          {
            $pull: {
              thoughts: params.thoughtId,
            },
          },
          {
            new: true,
          }
        );
      })
      .then((dbUserData) => {
        if (!dbUserData) {
          res.status(404).json({
            message: "No thought found with this id!",
          });
          return;
        }
        res.json(dbUserData);
      })
      .catch((err) => res.json(err));
  },
};
module.exports = thoughtController;
